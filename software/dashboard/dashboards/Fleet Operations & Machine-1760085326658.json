{
  "__inputs": [
    {
      "name": "DS_INFLUXDB-1",
      "label": "InfluxDB-1",
      "description": "",
      "type": "datasource",
      "pluginId": "influxdb",
      "pluginName": "InfluxDB"
    }
  ],
  "__elements": {},
  "__requires": [
    {
      "type": "panel",
      "id": "gauge",
      "name": "Gauge",
      "version": ""
    },
    {
      "type": "grafana",
      "id": "grafana",
      "name": "Grafana",
      "version": "9.3.6"
    },
    {
      "type": "datasource",
      "id": "influxdb",
      "name": "InfluxDB",
      "version": "1.0.0"
    },
    {
      "type": "panel",
      "id": "stat",
      "name": "Stat",
      "version": ""
    },
    {
      "type": "panel",
      "id": "state-timeline",
      "name": "State timeline",
      "version": ""
    },
    {
      "type": "panel",
      "id": "table",
      "name": "Table",
      "version": ""
    },
    {
      "type": "panel",
      "id": "timeseries",
      "name": "Time series",
      "version": ""
    }
  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": null,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 2,
      "panels": [],
      "title": "Factory Overview",
      "type": "row"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB-1}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 3,
        "x": 0,
        "y": 1
      },
      "id": 1,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "9.3.6",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB-1}"
          },
          "editorMode": "code",
          "format": "table",
          "query": "from(bucket: \"microfactory\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"sensor\")\n  |> filter(fn: (r) => r[\"device\"] == \"${energy_device}\")\n  |> filter(fn: (r) => r[\"_field\"] == \"aenergy\")\n  |> last()",
          "rawQuery": true,
          "rawSql": "WITH latest_readings AS (\r\n  -- This subquery gets the single most recent row for each device in the selected factory\r\n  SELECT DISTINCT ON (d.device_id)\r\n    ed.power_watts\r\n  FROM\r\n    devices AS d\r\n  JOIN\r\n    energy_data AS ed ON d.device_id = ed.device_id\r\n  WHERE\r\n    d.location = '$factory'\r\n  ORDER BY\r\n    d.device_id, ed.timestamp DESC\r\n)\r\n-- This outer query then simply sums up those latest readings\r\nSELECT\r\n  SUM(power_watts)\r\nFROM\r\n  latest_readings;",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Total Energy Consumed",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB-1}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 10,
        "x": 3,
        "y": 1
      },
      "id": 12,
      "options": {
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showThresholdLabels": false,
        "showThresholdMarkers": true
      },
      "pluginVersion": "9.3.6",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB-1}"
          },
          "query": "from(bucket: \"microfactory\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"sensor\")\n  |> filter(fn: (r) => r[\"device\"] == \"${energy_device}\")\n  |> filter(fn: (r) => r[\"_field\"] == \"apower\")\n  |> last()\n  |> map(fn: (r) => ({ r with _field: \"Last APower\" }))",
          "refId": "A"
        }
      ],
      "title": "Live Power (W)",
      "type": "gauge"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB-1}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "max": 100,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 11,
        "x": 13,
        "y": 1
      },
      "id": 14,
      "options": {
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showThresholdLabels": false,
        "showThresholdMarkers": true
      },
      "pluginVersion": "9.3.6",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB-1}"
          },
          "query": "from(bucket: \"microfactory\")\n|> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n|> filter(fn: (r) => r[\"_measurement\"] == \"machine\")\n|> filter(fn: (r) => r[\"process\"] == \"job\")\n|> filter(fn: (r) => r[\"_field\"] == \"progress\")\n|> filter(fn: (r) => r[\"device\"] == \"${device_id}\")\n|> yield(name: \"last\")",
          "refId": "A"
        }
      ],
      "title": "Print Progress (%)",
      "type": "gauge"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 9
      },
      "id": 4,
      "panels": [],
      "title": "Energy Consumption",
      "type": "row"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB-1}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "watt"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 9,
        "w": 24,
        "x": 0,
        "y": 10
      },
      "id": 5,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.4.0",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB-1}"
          },
          "editorMode": "code",
          "format": "table",
          "query": "from(bucket: \"microfactory\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"sensor\")\n  |> filter(fn: (r) => r[\"device\"] == \"${energy_device}\") \n  |> filter(fn: (r) => r[\"_field\"] == \"apower\")\n  |> yield(name: \"mean\")",
          "rawQuery": true,
          "rawSql": "SELECT\r\n  -- The time_bucket function groups data into time intervals (e.g., 5-minute buckets)\r\n  time_bucket('5m', ed.timestamp) AS \"time\",\r\n  -- We calculate the average power consumption within each bucket\r\n  AVG(ed.power_watts) AS \"Average Power (W)\"\r\nFROM\r\n  energy_data AS ed\r\nJOIN\r\n  devices AS d ON ed.device_id = d.device_id\r\nWHERE\r\n  -- Filter by the selected factory and the Grafana time range picker\r\n  d.location = '$factory' AND $__timeFilter(ed.timestamp)\r\nGROUP BY\r\n  \"time\"\r\nORDER BY\r\n  \"time\";",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Power History",
      "type": "timeseries"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 19
      },
      "id": 6,
      "panels": [],
      "title": "Machine Deep Dive",
      "type": "row"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB-1}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byFrameRefID",
              "options": "A"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Nozzle Temp"
              }
            ]
          },
          {
            "matcher": {
              "id": "byFrameRefID",
              "options": "B"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Bed Temp"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 10,
        "w": 10,
        "x": 0,
        "y": 20
      },
      "id": 7,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.4.0",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB-1}"
          },
          "editorMode": "code",
          "format": "table",
          "query": "from(bucket: \"microfactory\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"machine\")\n  |> filter(fn: (r) => r[\"process\"] == \"machineprocess\")\n  |> filter(fn: (r) => r[\"device\"] == \"${device_id}\")\n  |> filter(fn: (r) => r[\"_field\"] == \"temp_nozzle\")\n  |> aggregateWindow(\n       every: v.windowPeriod,\n       fn: mean,\n       createEmpty: true\n     )\n  |> fill(column: \"_value\", usePrevious: true)\n  |> yield(name: \"Nozzle Temp\")\n",
          "rawQuery": true,
          "rawSql": "SELECT\r\n  $__timeGroup(timestamp, $__interval) AS time,\r\n  AVG(power_watts) AS \"Power\"\r\nFROM energy_data\r\nWHERE\r\n  device_id = $device_id\r\n  AND $__timeFilter(timestamp)\r\nGROUP BY time\r\nORDER BY time;",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB-1}"
          },
          "editorMode": "code",
          "format": "table",
          "hide": false,
          "query": "from(bucket: \"microfactory\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"machine\")\n  |> filter(fn: (r) => r[\"process\"] == \"machineprocess\")\n  |> filter(fn: (r) => r[\"device\"] == \"${device_id}\")\n  |> filter(fn: (r) => r[\"_field\"] == \"temp_bed\")\n  |> aggregateWindow(\n       every: v.windowPeriod,\n       fn: mean,\n       createEmpty: true\n     )\n  |> fill(column: \"_value\", usePrevious: true)\n  |> yield(name: \"Bed Temp\")\n",
          "rawQuery": true,
          "rawSql": "SELECT\r\n  $__timeGroup(timestamp, $__interval) AS time,\r\n  AVG(nozzle_temp_actual) AS \"Nozzle Temp\"\r\nFROM printer_status\r\nWHERE\r\n  device_id = $device_id \r\n  AND $__timeFilter(timestamp)\r\nGROUP BY time\r\nORDER BY time;",
          "refId": "B",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Nozzle and Bed Temperature",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB-1}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "fillOpacity": 70,
            "lineWidth": 0,
            "spanNulls": false
          },
          "mappings": [
            {
              "options": {
                "Cancelling": {
                  "color": "yellow",
                  "index": 7,
                  "text": "Cancelling"
                },
                "Cooling": {
                  "color": "purple",
                  "index": 4,
                  "text": "Cooling"
                },
                "Error": {
                  "color": "dark-red",
                  "index": 5,
                  "text": "Error"
                },
                "FINISHED": {
                  "color": "light-green",
                  "index": 8,
                  "text": "Finished"
                },
                "Heating": {
                  "color": "orange",
                  "index": 3,
                  "text": "Heating"
                },
                "IDLE": {
                  "color": "#7a747485",
                  "index": 1,
                  "text": "Idle"
                },
                "Offline": {
                  "color": "#ccccdb82",
                  "index": 6,
                  "text": "Offline"
                },
                "Operational": {
                  "color": "green",
                  "index": 2,
                  "text": "Operational"
                },
                "PAUSED": {
                  "color": "light-orange",
                  "index": 9,
                  "text": "Paused"
                },
                "PRINTING": {
                  "color": "blue",
                  "index": 0,
                  "text": "Printing"
                }
              },
              "type": "value"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 10,
        "w": 14,
        "x": 10,
        "y": 20
      },
      "id": 8,
      "options": {
        "alignValue": "left",
        "legend": {
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "mergeValues": true,
        "rowHeight": 0.9,
        "showValue": "auto",
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.4.0",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB-1}"
          },
          "editorMode": "code",
          "format": "table",
          "query": "from(bucket: \"microfactory\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"machine\")\n  |> filter(fn: (r) => r[\"process\"] == \"machineprocess\")\n  |> filter(fn: (r) => r[\"device\"] == \"${device_id}\")\n  |> filter(fn: (r) => r[\"_field\"] == \"state\")\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> keep(columns: [\"_time\", \"_value\"])",
          "rawQuery": true,
          "rawSql": "SELECT\r\n  timestamp AS \"time\",\r\n  state_text AS \"State\"\r\nFROM\r\n  printer_status\r\nWHERE\r\n  -- Filter by the selected device and the Grafana time range\r\n  device_id = $device_id AND $__timeFilter(timestamp)\r\nORDER BY\r\n  \"time\";",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Printer State Timeline",
      "type": "state-timeline"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 30
      },
      "id": 9,
      "panels": [],
      "title": "Job Logbook",
      "type": "row"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB-1}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "left",
            "displayMode": "auto",
            "filterable": true,
            "inspect": false
          },
          "links": [
            {
              "title": "Focus on this Job",
              "url": "/d/${__dashboard.uid}?orgId=${__org.id}&var-factory=${factory}&var-device_id=${device_id}&from=${__data.fields.start_time_hidden}&to=${__data.fields.end_time_hidden}"
            }
          ],
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "start_time_hidden"
            },
            "properties": [
              {
                "id": "custom.hidden",
                "value": true
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "end_time_hidden"
            },
            "properties": [
              {
                "id": "custom.hidden",
                "value": true
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "File"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 896
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 7,
        "w": 24,
        "x": 0,
        "y": 31
      },
      "id": 10,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "enablePagination": true,
          "fields": [],
          "reducer": [
            "sum"
          ],
          "show": true
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "Compleated at"
          }
        ]
      },
      "pluginVersion": "9.3.6",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB-1}"
          },
          "editorMode": "code",
          "format": "table",
          "query": "from(bucket: \"microfactory\")\n  |> range(start: 0)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"jobs\")\n  |> filter(fn: (r) => \n      r[\"_field\"] == \"energyConsumed\" or \n      r[\"_field\"] == \"filament used [g]\" or \n      r[\"_field\"] == \"filament used [mm]\" or \n      r[\"_field\"] == \"filament_type\" or \n      r[\"_field\"] == \"jobDuration\" or \n      r[\"_field\"] == \"jobId\"\n  )\n  |> filter(fn: (r) => r[\"device\"] == \"${device_id}\")\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n  |> map(fn: (r) => ({ \n        r with jobDuration: r.jobDuration / 60.0 \n    }))\n  |> keep(columns: [\n      \"_time\", \n      \"jobId\", \n      \"energyConsumed\", \n      \"jobDuration\", \n      \"filament used [g]\", \n      \"filament used [mm]\", \n      \"filament_type\"\n  ])\n  |> rename(columns: {\n      _time: \"Completed at\",\n      jobId: \"Job ID\",\n      energyConsumed: \"Energy (kWh)\",\n      jobDuration: \"Duration (min)\",\n      \"filament used [g]\": \"Filament Used (g)\",\n      \"filament used [mm]\": \"Filament Used (mm)\",\n      filament_type: \"Filament Type\"\n  })\n",
          "rawQuery": true,
          "rawSql": "SELECT\r\n  filename       AS \"File\",\r\n  end_time       AS \"Completed At\",\r\n  to_char(make_interval(secs => duration_seconds), 'HH24:MI:SS') AS \"Duration\",\r\n  (session_energy_wh / 1000.0)::numeric(10,3) AS \"Energy (kWh)\",\r\n  filament_used_g AS \"Filament (g)\"\r\nFROM print_jobs\r\nWHERE\r\n  device_id = $device_id\r\n  AND status = 'done'\r\nORDER BY\r\n  \"Completed At\" DESC;\r\n",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Job History",
      "type": "table"
    }
  ],
  "refresh": "5s",
  "schemaVersion": 37,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {},
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB-1}"
        },
        "definition": "from(bucket: \"microfactory\")\n  |> range(start: 0)\n  |> filter(fn: (r) => r._measurement == \"machine\")\n  |> filter(fn: (r) => r[\"process\"] == \"machineprocess\")\n  |> drop(columns: [\"_value\"])                     // Remove numeric column\n  |> group()\n  |> distinct(column: \"device\")\n",
        "hide": 0,
        "includeAll": false,
        "label": "Machine",
        "multi": false,
        "name": "device_id",
        "options": [],
        "query": "from(bucket: \"microfactory\")\n  |> range(start: 0)\n  |> filter(fn: (r) => r._measurement == \"machine\")\n  |> filter(fn: (r) => r[\"process\"] == \"machineprocess\")\n  |> drop(columns: [\"_value\"])                     // Remove numeric column\n  |> group()\n  |> distinct(column: \"device\")\n",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {},
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB-1}"
        },
        "definition": "from(bucket: \"microfactory\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"machine\")\n  |> filter(fn: (r) => r[\"process\"] == \"machineprocess\")\n  |> filter(fn: (r) => r[\"device\"] == \"${device_id}\")\n  |> filter(fn: (r) => r[\"_field\"] == \"electricaldeviceid\")\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> yield(name: \"last\")",
        "hide": 0,
        "includeAll": false,
        "multi": false,
        "name": "energy_device",
        "options": [],
        "query": "from(bucket: \"microfactory\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"machine\")\n  |> filter(fn: (r) => r[\"process\"] == \"machineprocess\")\n  |> filter(fn: (r) => r[\"device\"] == \"${device_id}\")\n  |> filter(fn: (r) => r[\"_field\"] == \"electricaldeviceid\")\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> yield(name: \"last\")",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "now-6h",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "browser",
  "title": "Fleet Operations & Machine",
  "uid": "det3mvjccv6rkb",
  "version": 22,
  "weekStart": ""
}